@model Cosmetics.ViewModels.Catalogs.Orders.OrderViewModel
@using CosmeticsShop.Data.Enums;
@{
    ViewData["Title"] = "Update";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container-fluid">
    <h1 class="mt-4">Đơn hàng chi tiết</h1>
    @if (Model.Status != OrderStatus.Success)
    {
        <ol class="breadcrumb mb-4">
            <li class="breadcrumb-item"><a asp-action="Index" asp-controller="Order">Danh sách đơn hàng</a></li>
            <li class="breadcrumb-item active">Chi tiết đơn hàng</li>
        </ol>
    }
    else { }
    <div class="card mb-4">
        <div class="card-header d-flex justify-content-between">
            <a asp-action="Index" asp-controller="Order" id="backbtn" class="btn btn-outline-dark d-none"><i class="fas fa-chevron-left back-list-product mr-2"></i>Về danh sách hóa đơn</a>
            @if (Model.Status != OrderStatus.Success && Model.Status != OrderStatus.Canceled)
            {
                <div>
                    <label class="m-0 btn btn-outline-dark d-flex align-items-center justify-content-center" for="orderUpdateStatus">
                        <i class="far fa-save mr-2"></i>
                        Lưu lại
                    </label>
                </div>
            }
        </div>

        <div class="card-body">
            <div class=" container">

                <div class="header">
                    <div class="row ">
                        <div class="col-6 d-flex justify-content-center">
                            <img src="/css/img/logoproject.png" alt="cosmetics">
                        </div>
                        <div class="col-6 d-flex justify-content-center align-items-center">
                            <div class="">
                                <div class="form-group">
                                    <span class="">Địa Chỉ : Hà Nội</span>
                                </div>

                                <div class="form-group">
                                    <span class="">SĐT : 0988886296</span>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-12 text-center text-capitalize mb-5 mt-3 font-weight-bold display-4">
                            Hóa đơn bán hàng
                        </div>
                    </div>
                    <div class="row col-12 d-flex justify-content-between">
                        <div class="col-6 d-flex justify-content-center">
                            <div class="">
                                <div class="form-group">
                                    <span class="">Ngày Tạo : @Model.OrderDate</span>
                                    <span asp-validation-for="OrderDate" class="text-danger"></span>
                                </div>

                                <div class="form-group">
                                    <span class="">Người Đặt : @Model.UserNameOrder</span>
                                    <span asp-validation-for="UserNameOrder" class="text-danger"></span>
                                </div>
                                <div class="form-group">
                                    <span class="">Người Nhận : @Model.ShipName</span>
                                    <span asp-validation-for="ShipName" class="text-danger"></span>
                                </div>
                                <div class="form-group">
                                    <span class="">Địa Chỉ : @Model.ShipAddress</span>
                                    <span asp-validation-for="ShipAddress" class="text-danger"></span>
                                </div>
                            </div>
                        </div>
                        <div class="col-6 d-flex justify-content-center">
                            <div class="">
                                <div class="form-group ">
                                    <span class="">Hóa Đơn Số : @Model.Id</span>
                                    <span asp-validation-for="Id" class="text-danger"></span>
                                </div>
                                <div class="form-group">
                                    <span class="">Người Nhận : @Model.ShipName</span>
                                    <span asp-validation-for="ShipName" class="text-danger"></span>
                                </div>
                                <form asp-action="Update">
                                    <div asp-validation-summary="ModelOnly" class="text-danger"></div>

                                    <div class="form-group ">
                                        <label asp-for="Status" class="control-label"> Trạng Thái : </label>
                                        @if (Model.Status != OrderStatus.Canceled)
                                        {
                                            @if (Model.Status != OrderStatus.Success)
                                            {
                                                <div>
                                                    <select asp-for="Status" id="orderStatus" style="padding:6px 12px">
                                                        @if (Model.Status == OrderStatus.InProgress)
                                                        {
                                                            <option selected value="@OrderStatus.InProgress">Đang xử lý</option>
                                                            <option value="@OrderStatus.Shipping">Đang giao hàng</option>
                                                            <option value="@OrderStatus.Success">Thành công</option>
                                                            <option class="modal" onchange="openModal('order-modal','order-cancel-submit',@Model.Id)" value="@OrderStatus.Canceled">Hủy đơn</option>
                                                        }
                                                        @if (Model.Status == OrderStatus.Shipping)
                                                        {
                                                            <option selected value="@OrderStatus.Shipping">Đang giao hàng</option>
                                                            <option value="@OrderStatus.Success">Thành công</option>
                                                            <option class="modal" onchange="openModal('order-modal','order-cancel-submit',@Model.Id)" value="@OrderStatus.Canceled">Hủy đơn</option>
                                                        }

                                                    </select>

                                                </div>
                                            }
                                            else
                                            {
                                                <span class="">Đã hoàn thành</span>
                                            }
                                        }
                                        else
                                        {
                                            <span class="">Đã hủy</span>
                                        }
                                        <span asp-validation-for="Status" class="text-danger"></span>
                                    </div>
                                    <div class="form-group">
                                        <input id="orderUpdateStatus" type="submit" value="Save" class="d-none btn btn-primary" />
                                    </div>
                                    <div class="form-group col-6 d-none">
                                        <label asp-for="Id" class="control-label"></label>
                                        <input disabled asp-for="Id" class="form-control" />
                                        <span asp-validation-for="Id" class="text-danger"></span>
                                    </div>
                                </form>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="row d-flex justify-content-center col-12">
                    <div class="form-group col-12">
                        <div class="table-responsive">
                            <table class="table table-bordered text-center">
                                <thead class="thead-dark text-white">
                                    <tr>
                                        <th>
                                            Tên Mặt Hàng
                                        </th>

                                        <th>
                                            Số Lượng
                                        </th>
                                        <th>
                                            Đơn Giá
                                        </th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in Model.OrderProducts)
                                    {
                                        <tr>
                                            <td>
                                                @item.Name
                                            </td>
                                            <td>
                                                @item.Quantity
                                            </td>
                                            <td class="priceFormat">
                                                @item.Price VNĐ
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>

                    </div>
                    <div class="form-group col-12 d-flex justify-content-around">
                        <h4 asp-for="Price" class="control-label col-9 font-weight-bold">Tổng Giá Trị : </h4>
                        <h4 class="col-3 text-center font-weight-bold priceFormat">@Model.Price VNĐ</h4>
                    </div>
                </div>
                <hr />
                <div class="row col-12">
                    <h3 class="col-12 text-capitalize text-center font-weight-bold">
                        Cảm Ơn Quý Khách Và Hẹn Gặp Lại !
                    </h3>
                </div>
            </div>
            @*Modal*@
            <div class="co-modal" id="order-modal">
                <div class="co-modal--content ">
                    <div class="co-modal--title px-3">
                        Bạn có chắc chắn muốn hủy đơn hàng này chứ?
                    </div>
                    <div>
                        <textarea rows="3" class="w-100 mt-4" style="outline:none;" placeholder="Điền lý do bạn muốn hủy đơn hàng này" id="orderCancelReason"></textarea>
                        <span class="text-danger" id="cancelOrderReason"></span>
                    </div>
                    <div class="co-modal--btns">
                        <span class="btn btn-outline-dark co-modal--btn co-cancel-btn" onclick="handleOnCancel()">Hủy bỏ</span>
                        <span class="btn btn-outline-danger co-modal--btn co-submit-btn" id="order-cancel-submit" onclick="onSubmitCancelOrder(this)">Xác nhận</span>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>



@section Scripts{
    <script>
        () => {
            const optionElements = document.querySelectorAll('#orderStatus option');
            optionElements.forEach(item => item.setAttribute('style', 'padding: 6px 12px;display:block;'));
        }
    </script>

    
    <script>

        const makeFormatPrice = (element) => {
            const price = parseInt(element.textContent);
            const newPrice = price.toLocaleString('it-IT', { style: 'currency', currency: 'VND' })
            element.textContent = newPrice
        }

        const prices = document.querySelectorAll('.priceFormat')
        if (prices) {
            prices.forEach(item => {
                makeFormatPrice(item)
            })
        }
        $('.orderStatus').change(function () {
            //đoạn mã sẽ được thực thi khi sự kiện change() xảy ra
        })
        const openModal = (modalId, submitId, data) => {
            modal = document.querySelector(`#${modalId}`);
            if (modal) {
                modal.style.display = 'flex';
                const submitBtn = document.querySelector(`#${submitId}`);
                if (submitBtn && data) {
                    submitBtn.setAttribute('data', data);
                }
            }
        }
        const handleOnCancel = () => {
            document.querySelector('.co-modal').style.display = 'none';
            document.querySelector('.co-submit-btn').removeAttribute('data');
        }
        const onSubmitCancelOrder = (btnElement) => {
            const cancelReason = document.querySelector('#orderCancelReason').value;
            if (!cancelReason.trim()) {
                document.querySelector('#cancelOrderReason').innerText = "Không được để trống lý do";
                event.preventDefault();
                return;
            }
            const orderId = btnElement.getAttribute('data');
            if (orderId) {
                $.ajax({
                    method: 'PUT',
                    url: `/client/cancelOrder`,
                    dataType: 'text',
                    data: { orderId: Number(orderId), cancelReason },
                    async: true,
                    success: async function (response) {
                        const { isSuccess, message } = JSON.parse(response);
                        $('#cancelMsgWrap').removeClass('d-none').addClass('d-flex');
                        if (isSuccess) {
                            $('#cancelMsg').html(message).addClass('rounded alert alert-success')
                        }
                        else {
                            $('#cancelMsg').html(message).addClass('rounded alert alert-danger')
                        }
                        await new Promise((resolve) => setTimeout(() => {
                            $('#cancelMsgWrap').fadeOut('slow');
                            resolve();
                        }, 1500));
                        $('#cancelMsg').html('')
                        $('#cancelMsgWrap').removeClass('d-flex').addClass('d-none');
                        handleOnCancel();
                        location.reload();
                    },
                    failure: function (response) {
                        alert('false')
                    },
                    error: function (response) {
                        alert('error')
                    }
                })
            }
        }

    </script>
}