@using Cosmetics.ViewModels.Common;
@model PageResponse<Cosmetics.ViewModels.Catalogs.Products.ProductViewModel>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section Scripts{
    <script>
        setTimeout(() => $('#msgAlert').fadeOut('slow'), 1500)
    </script>
}

@inject Microsoft.Extensions.Configuration.IConfiguration Configuration;
<div class="container-fluid">
    <h1 class="mt-4">Products</h1>
    <ol class="breadcrumb mb-4">
        <li class="breadcrumb-item"><a asp-action="Index" asp-controller="Home">Dashboard</a></li>
        <li class="breadcrumb-item active">Danh Sách Sản Phẩm</li>
    </ol>

    <div class="card mb-12">
        <div class="card-header d-flex justify-content-between">
            <form asp-action="Index" method="get">
                <div class="form-outline my-2 d-flex">
                    <input name="keyword" value="@ViewBag.Keyword" type="text" id="productSearchBox" placeholder="Tìm kiếm..." class="form-control  border-dark" />
                    <input asp-for="PageSize" value="@Model.PageSize" type="hidden" />
                    <select onchange="this.form.submit()" name="CategoryId" asp-items="@ViewBag.Categories" class="mx-2 border-dark">
                        <option>---Lựa chọn danh mục---</option>
                    </select>
                    <button type="submit" class="btn btn-outline-dark ml-2">
                        <i class="fas fa-search"></i>
                    </button>
                </div>
            </form>

            <div class="my-2">
                <a asp-action="Create" asp-controller="Product" class="btn btn-outline-dark ">
                    <i class="fas fa-plus mr-2"></i>
                    Tạo Mới Sản Phẩm
                </a>
            </div>

        </div>
        <div class="card-body">
            @if (ViewBag.SuccessMsg != null)
            {
                <div class="d-flex justify-content-center">
                    <div id="msgAlert" class="alert alert-success w-25" role="alert">
                        @ViewBag.SuccessMsg
                    </div>
                </div>
            }
            <div class="d-flex w-25 align-items-center mb-3">
                @await Component.InvokeAsync("ChangePageSize", Model)
            </div>
            
            <div class="container-fluid">
                <div class="container   ">


                    <div class="row list-product-dark font-weight-bold text-white text-capitalize" >
                        <div class="col col-2"> Ảnh Thu Nhỏ</div>
                        <div class="col col-2"> Tên</div>
                        <div class="col col-2"> Giá Bán</div>
                        <div class="col col-2"> Giá Gốc</div>
                        <div class="col col-1"> Kho</div>
                        <div class="col col-1"> Xuất xứ</div>
                        <div class="col col-2"> Tác Vụ</div>
                    </div>
                    @foreach (var item in Model.Items)
                    {
                        <div class="row list-product text-decoration-none text-break ">
                            <div class="col col-2">
                                <img class="w-75" 
                                     src="@Configuration["BaseImageAddress"]@item.ImagePath" alt="@item.Name" />
                            </div>
                            <div class="col col-2">
                                <a class="" href="Product/Details/@item.Id">@item.Name</a>
                            </div>
                            <div class="col col-2"> @Html.DisplayFor(modelItem => item.Price)</div>
                            <div class="col col-2"> @Html.DisplayFor(modelItem => item.OriginalPrice)</div>
                            <div class="col col-1"> @Html.DisplayFor(modelItem => item.Stock)</div>
                            <div class="col col-1"> @Html.DisplayFor(modelItem => item.OriginalCountry)</div>
                            <div class="col col-2">
                                @Html.ActionLink("Sửa", "Details", new { id = item.Id }) <span class="mx-2">|</span>
                                @Html.ActionLink("Xóa", "Delete", new { id = item.Id })
                            </div>
                        </div>
                    }
                        
                    </div>
                <!-- <div class="container d-flex">
            <div class="row d-flex flex-wrap">
                <div class="col">
                    1 of 2
                </div>
                <div class="col">
                    2 of 2
                </div>
            </div>
            <div class="row d-flex flex-wrap">
                <div class="col">
                    1 of 3
                </div>
                <div class="col">
                    2 of 3
                </div>
                <div class="col">
                    3 of 3
                </div>
            </div>
        </div> -->
            </div>
            @await Component.InvokeAsync("Pager", Model)
        </div>
    </div>
</div>
