@using Cosmetics.ViewModels.Common;
@model PageResponse<Cosmetics.ViewModels.Catalogs.Products.ProductViewModel>
@using System.Security.Claims;


@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";

    var identity = User.Identity as ClaimsIdentity;
    var roles = identity?.FindFirst("Role")?.Value ?? null;
    bool isManager = false;
    if (!string.IsNullOrEmpty(roles))
    {
        isManager = roles.Contains("Manager");
    }
}


@inject Microsoft.Extensions.Configuration.IConfiguration Configuration;
<div class="container-fluid">
    <h1 class="mt-4">Sản Phẩm</h1>
    <ol class="breadcrumb mb-4">
        <li class="breadcrumb-item"><a asp-action="Index" asp-controller="Home">Bảng điều khiển</a></li>
        <li class="breadcrumb-item active">Danh Sách Sản Phẩm</li>
    </ol>

    <div class="card mb-12">
        <div class="card-header d-flex justify-content-between">
            <form asp-action="Index" method="get">
                <div class="form-outline my-2 d-flex">
                    <input name="keyword" value="@ViewBag.Keyword" type="text" id="productSearchBox" placeholder="Tìm kiếm..." class="form-control  border-dark" />
                    <input asp-for="PageSize" value="@Model.PageSize" type="hidden" />
                    <select onchange="this.form.submit()" name="CategoryId" asp-items="@ViewBag.Categories" class="mx-2 border-dark rounded">
                        <option>---Chọn Danh Mục---</option>
                    </select>
                    <button type="submit" class="btn btn-outline-dark ml-2">
                        <i class="fas fa-search"></i>
                    </button>
                </div>
            </form>

            <div class="my-2">
                <a asp-action="Create" asp-controller="Product" class="btn btn-outline-dark ">
                    <i class="fas fa-plus mr-2"></i>
                    Tạo Mới Sản Phẩm
                </a>
            </div>

        </div>
        <div class="card-body">
            @if (ViewBag.SuccessMsg != null)
            {
                <div class="d-flex justify-content-center">
                    <div id="msgAlert" class="alert alert-success w-25" role="alert">
                        @ViewBag.SuccessMsg
                    </div>
                </div>
            }
            <div class="d-flex w-25 align-items-center mb-3">
                @await Component.InvokeAsync("ChangePageSize", Model)
            </div>
            <div class="table-responsive">
                <table class="table table-bordered border-dark">
                    <thead class="m-0 ">
                        <tr class="d-flex list-product-dark text-white">

                            <th class="tb-col" style="flex: 1" scope="col">Ảnh</th>
                            <th class="tb-col" style="flex: 1.8" scope="col">
                                Tên
                            </th>
                            <th class="tb-col" style="flex: 0.7" scope="col">
                                Giá Bán
                            </th>
                            <th class="tb-col" style="flex: 0.7" scope="col">
                                Giá Gốc
                            </th>
                            <th class="tb-col" style="flex: 0.7" scope="col">
                                Kho
                            </th>
                            <th class="tb-col" style="flex: 0.7" scope="col">
                                Xuất Xứ
                            </th>
                            <th class="tb-col" style="flex: 1.2" scope="col">
                                Tác Vụ
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.Items)
                        {
                            <tr class="d-flex list-product">

                                <td class="pro-item" style="flex: 1">

                                    <img width="100%" height="80px"
                                         src="@Configuration["BaseImageAddress"]@item.ImagePath" alt="@item.Name" />
                                </td>
                                <td class="d-flex align-items-center justify-content-center text-center pro-item " style="flex: 1.8">
                                    @Html.ActionLink(item.Name, "Update", new { id = item.Id })
                                </td>
                                <td class="d-flex align-items-center justify-content-center pro-item text-overflow" style="flex: 0.7">
                                    @Html.DisplayFor(modelItem => item.Price)
                                </td>
                                <td class="d-flex align-items-center justify-content-center pro-item text-overflow" style="flex: 0.7">
                                    @Html.DisplayFor(modelItem => item.OriginalPrice)
                                </td>
                                <td class="d-flex align-items-center justify-content-center pro-item" style="flex: 0.7">
                                    @Html.DisplayFor(modelItem => item.Stock)
                                </td>
                                <td class="d-flex align-items-center justify-content-center pro-item" style="flex: 0.7">
                                    @Html.DisplayFor(modelItem => item.OriginalCountry)
                                </td>
                                <td class="d-flex align-items-center justify-content-around pro-item" style="flex: 1.2">
                                    @*@Html.ActionLink("Edit", "Update", new { id = item.Id })*@
                                    <a class="d-block btn btn-outline-info px-2" href="@Url.Action("Update","Product")/@item.Id">
                                        Sửa
                                    </a>
                                    <a class="d-block btn btn-outline-primary px-2" href="Product/@item.Id/images">
                                        Ảnh
                                    </a>
                                    @if (isManager)
                                    {
                                        <button onclick="getValue(@item.Id)" data-target="#exampleModalCenter" data-toggle="modal" class="d-block btn btn-outline-danger px-2">
                                        Xóa
                                        </button>
                                    }
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
            @await Component.InvokeAsync("Pager", Model)

            <!-- Button trigger modal -->
            <!-- Modal -->
            <div class="modal fade" id="exampleModalCenter" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
                <div class="modal-dialog modal-dialog-centered" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="exampleModalCenterTitle">Xóa sản phẩm</h5>
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </button>
                        </div>
                        <div class="modal-body">
                            Bạn có chắc chắn muốn xóa sản sản phẩm này?
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-dismiss="modal">Hủy</button>
                            <button type="submit" class="btn btn-danger" data-dismiss="modal" id="delete_submit_btn">Xóa</button>

                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@section Scripts{
    <script>
        setTimeout(() => $('#msgAlert').fadeOut('slow'), 1500)
    </script>
    <script>
        var delete_id = -1;
        const getValue = (id) => delete_id = id;
        $('#delete_submit_btn').on('click', () => {
            
            $.ajax(
                {
                    type: "POST",
                    url: "Product/Delete",
                    dataType: "text",
                    data: { id: delete_id },
                    async: true,
                    success: function (response) {
                        location.reload();
                       
                    },
                    failure: function (response) {
                        alert('false')

                    },
                    error: function (response) {
                        alert('error')

                    }
                });
        })

    </script>


}
