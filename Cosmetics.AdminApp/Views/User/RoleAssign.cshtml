@model Cosmetics.ViewModels.Systems.Users.RoleAssignRequest

@{
    ViewData["Title"] = "RoleAssign";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container-fluid">
    <h1 class="mt-4">Tables</h1>
    <ol class="breadcrumb mb-4">
        <li class="breadcrumb-item"><a asp-action="Index" asp-controller="Home">Dashboard</a></li>
        <li class="breadcrumb-item active">Assign user roles</li>
    </ol>

    <div class="card mb-4">
        <div class="card-header d-flex justify-content-between">
            <a asp-action="Index" asp-controller="User" class="btn btn-success">Back to user list</a>
            @{
                var parms = new Dictionary<string, string>
                                                                                                {
                    {"id", Model.Id.ToString() }
                };
            }
            <a class="btn btn-success" asp-controller="User" asp-action="Edit" asp-all-route-data="parms">Edit user</a>
        </div>
        <div class="card-body">
            <form asp-action="RoleAssign">
                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <input type="hidden" asp-for="Id" value="@Model.Id" />
                @for (int i = 0; i < Model.Roles.Count; i++)
                {
                    <div class="form-group">
                        <label>
                            @Model.Roles[i].Name
                            <input type="checkbox" asp-for="Roles[i].Selected" class="ml-2" />
                            <input type="hidden" asp-for="Roles[i].Name" value="@Model.Roles[i].Name" />
                            <input type="hidden" asp-for="Roles[i].Id" value="@Model.Roles[i].Id" />

                        </label>

                    </div>
                }
                <div class="form-group">
                    <input type="submit" value="Save" class="btn btn-outline-dark" />
                </div>
            </form>
        </div>
    </div>
</div>

